name: CI

on:
  push:
    branches:
      - main

jobs:
  test-library:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ 1.20 ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Enable CGO
        run: export CGO_ENABLED=1

      - name: Go formatting analysis
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            gofmt -d .
            exit 1
          fi

      - name: Go code quality analysis
        run: go vet ./...

      - name: Go unit testing
        run: |
          go test -race $(go list ./... | grep -v /vendor/) -v -coverprofile=coverage.out
          go tool cover -func=coverage.out

      - name: Upload coverage results
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage.out

      - name: Coverage percentage
        id: coverage
        run:
          echo "Coverage: ${{ steps.coverage.outputs.percentage }}"

  test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install golangci-lint
        run: |
          curl -sSfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.52.3

      - name: Run golangci-lint
        run: ./bin/golangci-lint run -v
